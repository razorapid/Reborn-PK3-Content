/**
 Medal of Honor: Allied Assault v1.12 REBORN  -  Morpheus Script
 ================================================================
 STRING INFORMATION LIBRARY; 				Script Framework BETA 
 ================================================================
 BY Sor
 VERSION 1.2.05 (4/12/2012)
 =-------------------------------------------------------------=		
 Copyright (c) 2008-2014  Lenny Knockx
 All rights reserved.
 =-------------------------------------------------------------=
 Permission to use, copy, modify, and/or distribute this software 
 for any purpose with or without fee is hereby granted, provided 
 that the above copyright notice and this permission notice appear
 in all copies.
 ---------------
 THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL 
 WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED 
 WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL 
 THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR 
 CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM 
 LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, 
 NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR 
 IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 =-------------------------------------------------------------=
 CONTACT: 	http://www.x-null.net/forums/member.php?185-Sor
 WEBSITE: 	http://www.x-null.net | www.mohaairborne.co.cc
 ================================================================
*/
__info:
	local.inf["library"] = "string.lib";	//filename
	local.inf["namespace"] = "Str";			//targetname of class this script is part of...
	local.inf["title"] = "STRING INFORMATION LIBRARY";
	local.inf["version"] = "1.2.05";
	local.inf["lastmodified"] = "4/12/2012";
	local.inf["authors"][0] = "Sor";
end local.inf;

/// ********************************************************* ///
///						L	I	S	T	S					  ///
/// ********************************************************* ///

BadCharData:
	local.hashArray = makeArray
	"/"
	"\\"
	"?"
	"%"
	"*"
	":"
	"|"
	"\""
	">"
	"<"
	" "
	endArray;
end (waitthread $Array.fullPath::_HashToIdxArray local.hashArray);

DecimalData:
	local.hashArray = makeArray
	"0"
	"1"
	"2"
	"3"
	"4"
	"5"
	"6"
	"7"
	"8"
	"9"
	endArray;
end (waitthread $Array.fullPath::_HashToIdxArray local.hashArray);

SafeCharData:
	local.hashArray = makeArray
	"a"       
	"b"       
	"c"        
	"d"       
	"e"       
	"f"        
	"g"       
	"h"       
	"i"        
	"j"        
	"k"       
	"l"        
	"m"      
	"n"       
	"o"       
	"p"       
	"q"       
	"r"        
	"s"        
	"t"        
	"u"       
	"v"       
	"w"       
	"x"       
	"y"       
	"z"  
	"A"  	
	"B"  
	"C"   
	"D"   
	"E"   
	"F"   
	"G"   
	"H"   
	"I"    
	"J"    
	"K"   
	"L"    
	"M"  
	"N"   
	"O"   
	"P"   
	"Q"   
	"R"    
	"S"   
	"T"   
	"U"   	
	"V"  
	"W"  
	"X"  
	"Y"   
	"Z" 
	"0"
	"1"
	"2"
	"3"
	"4"
	"5"
	"6"
	"7"
	"8"
	"9"
	"."
	"-"
	"_"
	";"
	endArray;
end (waitthread $Array.fullPath::_HashToIdxArray local.hashArray);

LowerCaseData:
	local.hashArray = makearray
	"a"          
	"b"          
	"c"         
	"d"         
	"e"          
	"f"          
	"g"         
	"h"         
	"i"          
	"j"          
	"k"         
	"l"         
	"m"         
	"n"   
	"o"   
	"p" 
	"q" 
	"r"
	"s"
	"t"
	"u" 
	"v" 
	"w" 
	"x" 
	"y"
	"z"
	endarray
end (waitthread $Array.fullPath::_HashToIdxArray local.hashArray);

UpperCaseData:
	local.hashArray = makearray
	"A"
	"B"
	"C"
	"D"
	"E"
	"F"
	"G"
	"H"
	"I"
	"J"
	"K"
	"L"
	"M"
	"N"
	"O"
	"P"
	"Q"
	"R"
	"S"
	"T"
	"U"
	"V"
	"W"
	"X"
	"Y"
	"Z"
	endArray
end (waitthread $Array.fullPath::_HashToIdxArray local.hashArray);

TitleExceptions:
	local.hashArray = makeArray
	"for"
	"and"
	"nor"
	"but"
	"or"
	"yet"
	"so"
	"both"
	"either"
	"neither"
	"because"
	"if"
	"after"
	"when"
	"although"
	"while"
	"of"
	"to"
	"in"
	"on"
	"with"
	"as"
	"by"
	"at"
	"from"
	"the"
	"a"
	"an"
	endArray;
end (waitthread $Array.fullPath::_HashToIdxArray local.hashArray);


/// ********************************************************* ///
///						M	A	S	K	S					  ///
/// ********************************************************* ///

NumericalMasks:
	local.tmp["0"] = 1;
	local.tmp["1"] = 1;
	local.tmp["2"] = 1;
	local.tmp["3"] = 1;
	local.tmp["4"] = 1;
	local.tmp["5"] = 1;
	local.tmp["6"] = 1;
	local.tmp["7"] = 1;
	local.tmp["8"] = 1;
	local.tmp["9"] = 1;
	/* local.tmp["__info"] = "0"::"1"::"2"::"3"::"4"::"5"::"6"::"7"::"8"::"9" */;	
end local.tmp

DecimalDataMasks:
	local.tmp["0"] = 0;
	local.tmp["1"] = 1;
	local.tmp["2"] = 2;
	local.tmp["3"] = 3;
	local.tmp["4"] = 4;
	local.tmp["5"] = 5;
	local.tmp["6"] = 6;
	local.tmp["7"] = 7;
	local.tmp["8"] = 8;
	local.tmp["9"] = 9;
	/* local.tmp["__info"] = "0"::"1"::"2"::"3"::"4"::"5"::"6"::"7"::"8"::"9" */;	
end local.tmp;

LetterDataMasks:
	local.tmp["a"] = 1;
	local.tmp["b"] = 1;
	local.tmp["c"] = 1;
	local.tmp["d"] = 1;
	local.tmp["e"] = 1;
	local.tmp["f"] = 1;
	local.tmp["g"] = 1;
	local.tmp["h"] = 1;
	local.tmp["i"] = 1;
	local.tmp["j"] = 1;
	local.tmp["k"] = 1;
	local.tmp["l"] = 1;
	local.tmp["m"] = 1;
	local.tmp["n"] = 1;
	local.tmp["o"] = 1;
	local.tmp["p"] = 1;
	local.tmp["q"] = 1;
	local.tmp["r"] = 1;
	local.tmp["s"] = 1;
	local.tmp["t"] = 1;
	local.tmp["u"] = 1;
	local.tmp["v"] = 1;
	local.tmp["w"] = 1;
	local.tmp["x"] = 1;
	local.tmp["y"] = 1;
	local.tmp["z"] = 1;
	local.tmp["A"] = 2;
	local.tmp["B"] = 2;
	local.tmp["C"] = 2;
	local.tmp["D"] = 2;
	local.tmp["E"] = 2;
	local.tmp["F"] = 2;
	local.tmp["G"] = 2;
	local.tmp["H"] = 2;
	local.tmp["I"] = 2;
	local.tmp["J"] = 2;
	local.tmp["K"] = 2;
	local.tmp["L"] = 2;
	local.tmp["M"] = 2;
	local.tmp["N"] = 2;
	local.tmp["O"] = 2;
	local.tmp["P"] = 2;
	local.tmp["Q"] = 2;
	local.tmp["R"] = 2;
	local.tmp["S"] = 2;
	local.tmp["T"] = 2;
	local.tmp["U"] = 2;
	local.tmp["V"] = 2;
	local.tmp["W"] = 2;
	local.tmp["X"] = 2;
	local.tmp["Y"] = 2;
	local.tmp["Z"] = 2;
	/* local.tmp["__info"] = "a"::"b"::"c"::"d"::"e"::"f"::"g"::"h"::"i"::"j"::"k"::"l"::"m"::"n"::"q"::"r"::"s"::"t"::"u"::"v"::"w"::"x"::"y"::"z"::"A"::"B"::"C"::"D"::"E"::"F"::"G"::"H"::"I"::"J"::"K"::"M"::"N"::"O"::"P"::"Q"::"R"::"S"::"T"::"U"::"V"::"W"::"X"::"Y"::"Z"; */
end local.tmp;

CharData local.selection:
	// lowercase -> UPPERCASE
	if ((local.selection == NIL) || (local.selection == 0)) {
		local.tmp["a"] = "A";
		local.tmp["b"] = "B";
		local.tmp["c"] = "C";
		local.tmp["d"] = "D";
		local.tmp["e"] = "E";
		local.tmp["f"] = "F";
		local.tmp["g"] = "G";
		local.tmp["h"] = "H";
		local.tmp["i"] = "I";
		local.tmp["j"] = "J";
		local.tmp["k"] = "K";
		local.tmp["l"] = "L";
		local.tmp["m"] = "M";
		local.tmp["n"] = "N";
		local.tmp["o"] = "O";
		local.tmp["p"] = "P";
		local.tmp["q"] = "Q";
		local.tmp["r"] = "R";
		local.tmp["s"] = "S";
		local.tmp["t"] = "T";
		local.tmp["u"] = "U";
		local.tmp["v"] = "V";
		local.tmp["w"] = "W";
		local.tmp["x"] = "X";
		local.tmp["y"] = "Y";
		local.tmp["z"] = "Z";
	}
	// UPPERCASE -> lowercase
	if ((local.selection == NIL) || (local.selection == 1)) {
		local.tmp["A"] = "a";
		local.tmp["B"] = "b";
		local.tmp["C"] = "c";
		local.tmp["D"] = "d";
		local.tmp["E"] = "e";
		local.tmp["F"] = "f";
		local.tmp["G"] = "g";
		local.tmp["H"] = "h";
		local.tmp["I"] = "i";
		local.tmp["J"] = "j";
		local.tmp["K"] = "k";
		local.tmp["L"] = "l";
		local.tmp["M"] = "m";
		local.tmp["N"] = "n";
		local.tmp["O"] = "o";
		local.tmp["P"] = "p";
		local.tmp["Q"] = "q";
		local.tmp["R"] = "r";
		local.tmp["S"] = "s";
		local.tmp["T"] = "t";
		local.tmp["U"] = "u";
		local.tmp["V"] = "v";
		local.tmp["W"] = "w";
		local.tmp["X"] = "x";
		local.tmp["Y"] = "y";
		local.tmp["Z"] = "z";
	}
end local.tmp;

ASCIIData:
	local.tmp[2] = "STX";
	local.tmp[3] = "ETX";
	local.tmp[9] = "\t";
	local.tmp[10] = "\n";
	local.tmp[13] = "CR"
	local.tmp[27] = "ESC";
	
	local.tmp[32] = " ";
	local.tmp[33] = "!";
	local.tmp[34] = "\"";
	local.tmp[35] = "#";
	local.tmp[36] = "$";
	local.tmp[37] = "%";
	local.tmp[38] = "&";
	local.tmp[39] = "'";
	local.tmp[40] = "(";
	local.tmp[41] = ")";
	local.tmp[42] = "*";
	local.tmp[43] = "+";
	local.tmp[44] = ",";
	local.tmp[45] = "-";
	local.tmp[46] = ".";
	local.tmp[47] = "/";
	local.tmp[48] = "0";
	local.tmp[49] = "1";
	local.tmp[50] = "2";
	local.tmp[51] = "3";
	local.tmp[52] = "4";
	local.tmp[53] = "5";
	local.tmp[54] = "6";
	local.tmp[55] = "7";
	local.tmp[56] = "8";
	local.tmp[57] = "9";
	local.tmp[58] = ":";
	local.tmp[59] = ";";
	local.tmp[60] = "<";
	local.tmp[61] = "=";
	local.tmp[62] = ">";
	local.tmp[63] = "?";
	
	local.tmp[64] = "@";
	local.tmp[65] = "A";
	local.tmp[66] = "B";
	local.tmp[67] = "C";
	local.tmp[68] = "D";
	local.tmp[69] = "E";
	local.tmp[70] = "F";
	local.tmp[71] = "G";
	local.tmp[72] = "H";
	local.tmp[73] = "I";
	local.tmp[74] = "J";
	local.tmp[75] = "K";
	local.tmp[76] = "L";
	local.tmp[77] = "M";
	local.tmp[78] = "N";
	local.tmp[79] = "O";
	local.tmp[80] = "P";
	local.tmp[81] = "Q";
	local.tmp[82] = "R";
	local.tmp[83] = "S";
	local.tmp[84] = "T";
	local.tmp[85] = "U";
	local.tmp[86] = "V";
	local.tmp[87] = "W";
	local.tmp[88] = "X";
	local.tmp[89] = "Y";
	local.tmp[90] = "Z";
	local.tmp[91] = "[";
	local.tmp[92] = "\\";
	local.tmp[93] = "]";
	local.tmp[94] = "^";
	local.tmp[95] = "_";
	
	local.tmp[96] = "`";
	local.tmp[97] = "a";
	local.tmp[98] = "b";
	local.tmp[99] = "c";
	local.tmp[100] = "d";
	local.tmp[101] = "e";
	local.tmp[102] = "f";
	local.tmp[103] = "g";
	local.tmp[104] = "h";
	local.tmp[105] = "i";
	local.tmp[106] = "j";
	local.tmp[107] = "k";
	local.tmp[108] = "l";
	local.tmp[109] = "m";
	local.tmp[110] = "n";
	local.tmp[111] = "o";
	local.tmp[112] = "p";
	local.tmp[113] = "q";
	local.tmp[114] = "r";
	local.tmp[115] = "s";
	local.tmp[116] = "t";
	local.tmp[117] = "u";
	local.tmp[118] = "v";
	local.tmp[119] = "w";
	local.tmp[120] = "x";
	local.tmp[121] = "y";
	local.tmp[122] = "z";
	local.tmp[123] = "{";
	local.tmp[124] = "|";
	local.tmp[125] = "}";
	local.tmp[126] = "~";
end local.tmp;


/// ********************************************************* ///
///				S	W	I	T	C	H	E	S				  ///
/// ********************************************************* ///

IsDecimalData local.var:
	switch (local.var) {
		case "0":
			local.result = "0";
		break;
		case "1":
			local.result = "1";
		break;
		case "2":
			local.result = "2";
		break;
		case "3":
			local.result = "3";
		break;
		case "4":
			local.result = "4";
		break;
		case "5":
			local.result = "5";
		break;
		case "6":
			local.result = "6";
		break;
		case "7":
			local.result = "7";
		break;
		case "8":
			local.result = "8";
		break;
		case "9":
			local.result = "9";
		break;
		default:
			local.result = 0;
		break;
	}
end local.result;

IsLetterData local.var:
	switch (local.var) {
		case "a":
			local.result = "a";
		break;
		case "b":
			local.result = "b";
		break;
		case "c":
			local.result = "c";
		break;
		case "d":
			local.result = "d";
		break;
		case "e":
			local.result = "e";
		break;
		case "f":
			local.result = "f";
		break;
		case "g":
			local.result = "g";
		break;
		case "h":
			local.result = "h";
		break;
		case "i":
			local.result = "i";
		break;
		case "j":
			local.result = "j";
		break;
		case "k":
			local.result = "k";
		break;
		case "l":
			local.result = "l";
		break;
		case "m":
			local.result = "m";
		break;
		case "n":
			local.result = "n";
		break;
		case "o":
			local.result = "o";
		break;
		case "p":
			local.result = "p";
		break;
		case "q":
			local.result = "q";
		break;
		case "r":
			local.result = "r";
		break;
		case "s":
			local.result = "s";
		break;
		case "t":
			local.result = "t";
		break;
		case "u":
			local.result = "u";
		break;
		case "v":
			local.result = "v";
		break;
		case "w":
			local.result = "w";
		break;
		case "x":
			local.result = "x";
		break;
		case "y":
			local.result = "y";
		break;
		case "z":
			local.result = "z";
		break;
		case "A":
			local.result = "A";
		break;
		case "B":
			local.result = "B";
		break;
		case "C":
			local.result = "C";
		break;		
		case "D":
			local.result = "D";
		break;		
		case "E":
			local.result = "E";
		break;		
		case "F":
			local.result = "F";
		break;		
		case "G":
			local.result = "G";
		break;		
		case "H":
			local.result = "H";
		break;		
		case "I":
			local.result = "I";
		break;		
		case "J":
			local.result = "J";
		break;		
		case "K":
			local.result = "K";
		break;		
		case "L":
			local.result = "L";
		break;		
		case "M":
			local.result = "M";
		break;		
		case "N":
			local.result = "N";
		break;		
		case "O":
			local.result = "O";
		break;		
		case "P":
			local.result = "P";
		break;		
		case "Q":
			local.result = "Q";
		break;		
		case "R":
			local.result = "R";
		break;		
		case "S":
			local.result = "S";
		break;		
		case "T":
			local.result = "T";
		break;		
		case "U":
			local.result = "U";
		break;		
		case "V":
			local.result = "V";
		break;		
		case "W":
			local.result = "W";
		break;		
		case "X":
			local.result = "X";
		break;		
		case "Y":
			local.result = "Y";
		break;		
		case "Z":
			local.result = "Z";
		break;
		default:		
			local.result = 0;
		break;
	}
end local.result;

IsEsc local.var:
	switch (local.var) {
		case "\n":
			local.result = "\n";
		break;
		case "\t":
			local.result = "\t";
		break;
		case "\"":
			local.result = "\"";
		break;
		case "\\":
			local.result = "\\";
		break;
		default:
			local.result = 0;
		break;
	}
end local.result;

IsPunct local.var:
	switch (local.var) {
		case ".":
			local.result = ".";
		break;
		case ",":
			local.result = ",";
		break;
		case ":":
			local.result = ":";
		break;
		case ";":
			local.result = ";";
		break;
		case "?":
			local.result = ";";
		break;
		case "!":
			local.result = ";";
		break;
		case "\"":
			local.result = "\"";
		break;
		case "'":
			local.result = "'";
		break;
		case "-":
			local.result = "-";
		break;
		default:
			local.result = 0;
		break;
	}
end local.result;

IsSymbol local.var:
	switch (local.var) {
		case ".":
			local.result = ".";
		break;
		case ",":
			local.result = ",";
		break;
		case ":":
			local.result = ":";
		break;
		case ";":
			local.result = ";";
		break;
		case "?":
			local.result = ";";
		break;
		case "!":
			local.result = ";";
		break;
		case "\"":
			local.result = "\"";
		break;
		case "'":
			local.result = "'";
		break;
		case "-":
			local.result = "-";
		break;
		case "&":
			local.result = "&";
		break; 
		case "|":
			local.result = "|";
		break;
		case "@":
			local.result = "@";
		break;
		case "#":
			local.result = "#";
		break;
		case "(":
			local.result = "(";
		break;
		case "^":
			local.result = "^";
		break;
		case "{":
			local.result = "{";
		break;
		case "}":
			local.result = "}";
		break;
		case ")":
			local.result = ")";
		break;
		case "[":
			local.result = "[";
		break;
		case "]":
			local.result = "]";
		break;
		case "$":
			local.result = "$";
		break;
		case "*":
			local.result = "*";
		break;
		case "%":
			local.result = "%";
		break;
		case "`":
			local.result = "`";
		break;
		case "+":
			local.result = "+";
		break;
		case "/":
			local.result = "/";
		break;
		case "\\":
			local.result = "\\";
		break;
		case "=":
			local.result = "=";
		break;
		case "~": 
			local.result = "~";
		break;
		case "<":
			local.result = "<";
		break;
		case ">":
			local.result = ">";
		break;
		default:
			local.result = 0;
		break;
	}
end local.result;

IsLower local.var:
	switch (local.var) {
		case "a":
			local.result = "a";
		break;
		case "b":
			local.result = "b";
		break;
		case "c":
			local.result = "c";
		break;
		case "d":
			local.result = "d";
		break;
		case "e":
			local.result = "e";
		break;
		case "f":
			local.result = "f";
		break;
		case "g":
			local.result = "g";
		break;
		case "h":
			local.result = "h";
		break;
		case "i":
			local.result = "i";
		break;
		case "j":
			local.result = "j";
		break;
		case "k":
			local.result = "k";
		break;
		case "l":
			local.result = "l";
		break;
		case "m":
			local.result = "m";
		break;
		case "n":
			local.result = "n";
		break;
		case "o":
			local.result = "o";
		break;
		case "p":
			local.result = "p";
		break;
		case "q":
			local.result = "q";
		break;
		case "r":
			local.result = "r";
		break;
		case "s":
			local.result = "s";
		break;
		case "t":
			local.result = "t";
		break;
		case "u":
			local.result = "u";
		break;
		case "v":
			local.result = "v";
		break;
		case "w":
			local.result = "w";
		break;
		case "x":
			local.result = "x";
		break;
		case "y":
			local.result = "y";
		break;
		case "z":
			local.result = "z";
		break;
		default:
			local.result = 0;
		break;
	}
end local.result;

IsUpper local.var:
	switch (local.var) {
		case "A":
			local.result = "A";
		break;
		case "B":
			local.result = "B";
		break;
		case "C":
			local.result = "C";
		break;		
		case "D":
			local.result = "D";
		break;		
		case "E":
			local.result = "E";
		break;		
		case "F":
			local.result = "F";
		break;		
		case "G":
			local.result = "G";
		break;		
		case "H":
			local.result = "H";
		break;		
		case "I":
			local.result = "I";
		break;		
		case "J":
			local.result = "J";
		break;		
		case "K":
			local.result = "K";
		break;		
		case "L":
			local.result = "L";
		break;		
		case "M":
			local.result = "M";
		break;		
		case "N":
			local.result = "N";
		break;		
		case "O":
			local.result = "O";
		break;		
		case "P":
			local.result = "P";
		break;		
		case "Q":
			local.result = "Q";
		break;		
		case "R":
			local.result = "R";
		break;		
		case "S":
			local.result = "S";
		break;		
		case "T":
			local.result = "T";
		break;		
		case "U":
			local.result = "U";
		break;		
		case "V":
			local.result = "V";
		break;		
		case "W":
			local.result = "W";
		break;		
		case "X":
			local.result = "X";
		break;		
		case "Y":
			local.result = "Y";
		break;		
		case "Z":
			local.result = "Z";
		break;
		default:
			local.result = 0;
		break;
	}
end local.result;